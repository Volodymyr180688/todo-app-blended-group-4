(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))d(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&d(c)}).observe(document,{childList:!0,subtree:!0});function i(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerpolicy&&(r.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?r.credentials="include":n.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function d(n){if(n.ep)return;n.ep=!0;const r=i(n);fetch(n.href,r)}})();let u;const s=new Uint8Array(16);function a(){if(!u&&(u=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(s)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function p(t,e=0){return o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]}const m=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),l={randomUUID:m};function y(t,e,i){if(l.randomUUID&&!e&&!t)return l.randomUUID();t=t||{};const d=t.random||(t.rng||a)();if(d[6]=d[6]&15|64,d[8]=d[8]&63|128,e){i=i||0;for(let n=0;n<16;++n)e[i+n]=d[n];return e}return p(d)}const g='<button type="button" class="btn-update" ></button>',b='<button type="button" class="btn-delete" >del</button> </div>',U=document.querySelector("form"),h=document.querySelector(".todo-list"),f=({status:t,id:e,text:i})=>`<li class="${t}" id="${e}"><p>${i}</p>${t==="todo"?g:b}</li>`;U.addEventListener("submit",v);function v(t){t.preventDefault();const{elements:{todo:e}}=t.currentTarget,i={text:e.value,id:y(),status:"todo"};h.insertAdjacentHTML("afterbegin",f(i))}
